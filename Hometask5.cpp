#include<iostream>
#include<cmath>
#include <string>
#include <limits>
using namespace std;
int main()
{
	/*
	Задание 1
	Дано N (1 ≤ N ≤ 27).
	Найти количество трехзначных натуральных чисел, сумма цифр которых равна N.
	Тестовые данные				Ожидаемый результат
	1							1
	27							1
	5							15
	10							54
	20							36
	*/
	/*int N, count=0;
	cin >> N;
	for(int i = 100; i<=999; ++i)
	{
	if ((i % 10 + i / 10 % 10 + i / 100) == N)
	{
	count+=1;
	}
	}
	cout << count << endl;
	/*Задание 2
	Вы решили помочь Васе с разработкой его игры и взяли на себя красивый вывод сообщений в игре.
	Напишите программу, которая принимает на вход строку текста
	и затем печатает введенную строку на экран в рамочке из символов +, - и |.
	Для красоты текст должен отделяться от рамки слева и справа пробелом.
	Например, текст Hello world должен выводиться так:
	+-------------+
	| Hello world |
	+-------------+
	#include <string>
	int main()
	{
	std::string line;
	std::getline(std::cin, line); 	// считывает из консоли сразу целую строку и записываем ее в переменную line
	int size = line.size();		// функция возвращает длину строки
	}*/
	/*int a=0;
	string line;
	getline(cin, line);
	cout << "+";
	a = line.size();
	for (int i = 1; i <= a + 2; ++i)
	{
	cout << "-";
	}
	cout << "+" << endl;
	cout << endl;
	cout << "| " << line << " |" << endl;
	cout << endl;
	cout << "+";
	for (int i = 1; i <= a + 2; ++i)
	{
	cout << "-";
	}
	cout << "+" << endl;
	/*Задание 3
	Стали известны подробности про новую игру Васи.
	Оказывается ее действия разворачиваются на шахматных досках нестандартного размера.
	У Васи уже написан код, генерирующий стандартную шахматную доску размера 8х8.
	Помогите Васе переделать этот код так, чтобы он умел выводить доску любого заданного размера.
	Например, доска размера 5x5 должна выводиться так:
	#.#.#
	.#.#.
	#.#.#
	.#.#.
	#.#.#
	*/
	/*int N;
	cin >> N;
	for (int i = 1; i <= N; ++i)
	{
	for (int j = 1; j <= N; ++j)
	{
	if ((i + j) % 2 == 0)
	{
	cout << "#";
	}
	else
	{
	cout << ".";
	}
	}
	cout << endl;
	}
	/*
	Задание 4
	Напишите программу, которая принимает у пользователя натуральное число N
	и выводит в консоль ромб со стороной N.
	Примеры:
	N = 1
	#
	N = 2
	#
	###
	#
	N = 4
	#
	###
	#####
	#######
	#####
	###
	#*/
	/*int N;
	cin >> N;
	for (int i = 1; i <= 2*N-1; ++i)
	{
	for (int j = 1; j<= abs(N * 2 - i * 2 ) / 2; ++j)
	{
	cout << " ";
	}
	for (int k = 1; k<= abs(2*N-1- abs(N * 2 - i * 2)) ; ++k)
	{
	cout << "#";
	}
	for (int l = 1; l<= abs(N * 2  - i * 2 ) / 2; ++l)
	{
	cout << " ";
	}
	cout << endl;
	}
	/*Задание 5 (дополнительно)
	Определите симметрично ли введенное пользователем число N
	Тестовые данные			Ожидаемый результат
	1				Да
	12				Нет
	565				Да
	1235321				Да
	12344321			Да
	456123				Нет
	*/

	//КОНЕЦ ЧАСТИ С ЦИКЛОМ FOR

	/*
	Задание 1
	Программа получает на вход последовательность целых неотрицательных чисел,
	каждое число отделено пробелом. Последовательность завершается числом 0,
	при считывании которого программа должна закончить свою работу.
	Выведите наименьший и наибольший элемент данной последовательности
	Тестовые данные       Ожидаемый результат
	1 2 -3 4 -5 0					-5 4
	1 9 -3 -3 2 1	0				-3 9
	1 2 5 4 3 5 4 5 0			1 5
	*/
	/*int a=1, min=numeric_limits<int>::max(),max= numeric_limits<int>::lowest();
	cin >> a;
	while (a != 0)
	{
	cin >> a;
	if (a > max)
	{
	max = a;
	}
	if (a < min)
	{
	min = a;
	}
	cout << " ";
	}
	cout << min << " " << max;
	/*Задание 2
	Программа получает на вход последовательность целых неотрицательных чисел,
	каждое число отделено пробелом. Последовательность завершается числом 0,
	при считывании которого программа должна закончить свою работу.
	Определите, какое количество элементов этой последовательности, равны ее наибольшему элементу.
	Формат входных данных
	Вводится последовательность натуральных чисел, оканчивающаяся числом 0
	(само число 0 в последовательность не входит, а служит как признак ее окончания).
	Тестовые данные				Ожидаемый результат
	1 2 3 4 5 0					  1
	1 2 3 3 2 1	0				  2
	1 2 5 4 3 5 4 5 0			3*/

	/*int  count = 0, max = numeric_limits<int>::min();
	while (true)
	{
		int n;
		cin >> n;
		if (n == 0) {
			break;
		}
		if (max == n)
		{
			++count;
		}
		if (n>max)
		{
			max = n;
			count = 1;
		}
	}

	cout << count;



	/*Задание 3
	Дано целое неотрицательное число N.
	Найти число, составленное теми же десятичными цифрами, что и N, но в обратном порядке.
	Тестовые данные				Ожидаемый результат
	1234						      4321
	5555						      5555
	15							      51
	987654321					    123456789*/
	/*int a , x=0,k=1,l;
	cin >> a;
	l = a;
	while (a > 0)
	{
	a = a / 10;
	k = k * 10;
	}
	while (l > 0)
	{
	x = x + (l % 10)*k;
	l = l / 10;
	k = k / 10;
	}
	cout << x / 10 << endl;
	/*Задание 4
	Найдите минимальную степень двойки, превосходящую заданное число.
	Тестовые данные				Ожидаемый результат
	1							        2
	2							        4
	15							      16
	100							      128*/
	/*int i=0,x;
	cin >> x;
	while (x >= pow(2,i))
	{
	i=i+1;
	}
	cout << pow(2, i) << endl;
	/*	Задание 5
	Последовательность Фибоначчи определяется так:
	F(0) = 0, F(1) = 1, …, F(n) = F(n-1) + F(n-2).
	По данному числу N определите N-е число Фибоначчи F(N).
	Тестовые данные				Ожидаемый результат
	0							        0
	1							        1
	2							        1
	3							        2
	4							        3
	6							        8
	10							      55
	25							      75025*/
	/*int n, fib = 0, fib0 = 0, fib1 = 1, i=1;
	cin >> n;
	while (i != n) {
		if (n == 0)
		{
			break;
		}
	fib = fib0 + fib1;
	fib0 = fib1;
	fib1 = fib;
	i = i + 1;
	}
	if (n == 0)
	{
	cout << 0;
	}
	else if (n == 1)
	{
	cout << 1;
	}
	else if (n == 2)
	{
	cout << 1;
	}
	else
	{
	cout << fib;
	}
	/*Задание 6 (дополнительное)
	Элемент последовательности называется локальным максимумом,
	если он строго больше предыдущего и последующего элемента последовательности.
	Первый и последний элемент последовательности не являются локальными максимумами.
	Дана последовательность натуральных чисел, завершающаяся числом 0.
	Определите количество строгих локальных максимумов в этой последовательности.
	Формат входных данных
	Вводится последовательность натуральных чисел, оканчивающаяся числом 0
	(само число 0 в последовательность не входит, а служит как признак ее окончания).
	Тестовые данные				Ожидаемый результат
	1 2 3 2 1 0					  1
	1 2 2 1 0					    0
	1 3 5 4 4 6 1 0				2
	1 9 8 7 7 8 5 9 0			2
	*/

}