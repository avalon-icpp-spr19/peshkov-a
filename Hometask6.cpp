#include<iostream>
#include<cmath>
#include <string>
#include <limits>
#include "Extention.hpp"
using namespace std;
const int SIZE = 10;
int main()
{


	/* Задание 1
	Объявите массив для хранения 10-ти целочисленных элементов
	Объявите константный массив для хранения 20-ти вещественных элементов
	Объявите массив для хранения 2-х символьных элементов
	int mas[10];
	const double mas1[20]{ 1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0 };
	char mas2[2];
	Пусть есть массив объявленный следующим образом:
	int data[6] = { 2, 4, 8, 16, 32, 64 };
	Какой размер имеет данный массив?
	6
	Данные какого типа он хранит
	int
	Чему равен элемент массива с индексом 0?
	2
	Чему равен элемент массива с индексом 3?
	16
	Какой индекс у элемента 8?
	2
	Какой индекс у элемента 32?
	4
	Присвойте первому элементу массива значение 1.
	data[0]=1
	Утройте значение последнего элемента в массиве.
	data[5]=data[5]*3
	Выведите элементы массива на экран через пробел.

	int data[6] = { 2, 4, 8, 16, 32, 64 };
	data[0] = 1;
		data[5] = data[5] * 3;
	for (int i = 0; i < 6; i++)
	{
		cout << data[i] << " ";
	}

	Объявите массив для хранения 5-ти элеменов любого типа и проинизиализируете его с помощью списка инициализации
	Выведите объявленный массив на экран.

	int data1[5] = { 2, 4, 8, 16, 32};
	Можно ли не указывать размер массива при его создании?
	Если можно, то продемострируйте это.

	int data2[]= { 2, 4, 8, 16, 32 };

	Пусть массив объявили следующим образом:
	int data[5] = { 1, 2 };
	Каков размер данного массива?
	5
	Чему равен элемент с индексов 1? Чему равен элемент с индексом 2?
	2,0
	Проверьте ответы с помощью дебагера.
	Выведите все элементы массива на экран.
	int data[5] = { 1, 2 };
	for (int i = 0; i < 5; i++)
	{
	cout << data[i] << " ";
	}
	Пусть массив объявлен следующим образом:
	const char alpha[3] = { 'a', 'b', 'c' }
	Каков размер данного массива?
	3
	Чему равен элемент с индексов 0? Чему равен индекс у элемента 'c'
	a,2
	Допустимы ли следующие выражения:
	alpha[0];-Да
	alpha[3];-Нет
	alpha[1] = 'd';-Нет
	alpha[1] = 'b';-Нет
	Выведите все элементы массива на экран.

	const char alpha[3] = { 'a', 'b', 'c' };
	cout<<alpha[0];
	cout<<	alpha[3];
	for (int i = 0; i < 3; i++)
	{
		cout << alpha[i] << " ";
	}

	*/

	/*
	Задание 2
	Объявите массив для хранения переменных типа int размером 20;
	Запишите в объявленный массив первые 20 натуральных чисел в порядке возрастания
	Выведите все элементы массива на экран

	int mas[20];
	for (int i = 0; i < 20; i++)
	{
		mas[i] = i + 1;
	}
	for (int i = 0; i < 20; i++)
	{
		cout << mas[i] << " ";
	}

	Запишите в этот же массив первые 20 четных чисел в порядке возрастания
	Выведите все элементы массива на экран
	int mas[20];
	mas[0] = 2;
	for (int i = 1; i < 21; i++)
	{
	mas[i] = mas[i-1]+2;
	}
	for (int i = 0; i < 20; i++)
	{
	cout << mas[i] << " ";
	}
	Запишите в этот же массив первые 20 степеней двойки (2^0, 2^1, ... , 2^19). Функцию pow не использовать
	Выведите все элементы массива на экран по 5 элементов в одной строке

int mas[20],a=1;
for (int i = 0; i < 20; i++)
{
	mas[i] = a;
	a = a * 2;
}
int l = 0;
for (int k = 0; k < 4; k++)
{
	for (int j = 0; j < 5; j++)
	{

		cout << mas[l] << " ";
		l++;
	}
	cout << endl;
}
	Занулите в предыдущем массиве все элементы с нечетным индексов (i = 1, 3, ..., 19);
	Выведите все элементы массива на экран по 5 элементов в одной строке

int mas[20], a = 1;
for (int i = 0; i < 20; i++)
{
	if (i % 2 == 0)
	{
		mas[i] = a;
		a = a * 2;
	}
	else
	{
		mas[i] = 0;
		a = a * 2;
	}
}
int l = 0;
for (int k = 0; k < 4; k++)
{
	for (int j = 0; j < 5; j++)
	{
		cout << mas[l] << " ";
		l++;
	}
	cout << endl;
}
	/* Задание 3
	При выполнении дальнейших заданий для заполнения массива случайными числами использовать функцию ext::GetRandomValue из Extention.hpp
	Например:
	int data[10];
	for(int i = 0; i < 10; ++i)
	{
	data[i] = ext::GetRandomValue(0, 100, true);
	}
	После выполнения данного кода массив data будет содержать 10 чисел в диапазоне от 0 до 100.
	Сгенерируйте массив из 10 элементов в диапазоне от -10 до 10.
	Выведите его на экран
	Найдите наибольший элемент в массиве.
	Выведите на экран значение этого элемента и его индекс
	(если максимальных элементов несколько вывести индекс любого).
	int data[10],max=-11,k=0;
	for (int i = 0; i < 10; ++i)
	{
		data[i] = ext::GetRandomValue(-10, 10);
	}
	for (int i = 0; i < 10; ++i)
	{
		cout<<data[i]<<" ";
	}
	for (int i = 0; i < 10; ++i)
	{
		if (data[i] > max)
		{
			max = data[i];
			k = i;
		}
	}
	cout << endl;
	cout << max << " "<<k<< endl;
	/*Сгенерируйте массив из 100 элементов в диапазоне от -100 до 100.
	Посчитайте и выведите на экран
	Сумму всех элементов этого массива.
	Количество элементов меньше 0, количество элементов равных 0, количество элементов больше 0
int data[100], sum=0, k0 = 0,kmore=0,kless=0;
for (int i = 0; i < 100; ++i)
{
	data[i] = ext::GetRandomValue(-100, 100);
}
for (int i = 0; i < 100; ++i)
{
	sum = sum + data[i];
}
for (int i = 0; i < 100; ++i)
{
	if (data[i] > 0)
	{
		kmore++;
	}
	else if (data[i] < 0)
	{
		kless++;
	}
	else
	{
		k0++;
	}
}
cout << endl;
cout << sum << " " << kmore << " " << k0 << " " << kless;
	Сгенерируйте массив из 100 элементов в диапазоне от 1 до 100.
	Вывести на экран
	Элементы в записи которых встречается цифра 2
	Элементы в записи которых не встречаются нечетные цифры
int data1[100],x,c1=0,c2=0;
for (int i = 0; i < 100; ++i)
{
	data1[i] = ext::GetRandomValue(1, 100);
}
for (int i = 0; i < 100; ++i)
{
	cout<<data1[i]<< " ";
}
cout << endl;
cout << endl;
cout << endl;
for (int i = 0; i < 100; ++i)
{
	x = data1[i];
	while (x > 0)
	{
		if (x % 10 == 2)
		{
			cout << data1[i] << " ";
			break;
		}
		x = x / 10;
	}
}
cout << endl;
cout << endl;
cout << endl;
for (int i = 0; i < 100; ++i)
{
	x = data1[i];
	while (x > 0)
	{
		c1++;
		if ((x % 10) % 2 == 0 )
		{
			c2++;
		}
		x = x / 10;
	}
	if (c1 == c2)
	{
		cout << data1[i] << " ";
	}
	c1 = 0;
	c2 = 0;
}
Сложите поэлементно массивы из двух предыдущих пунктов, записав результаты сложения в новый массив
	Выведите на экран получившийся массив по 10 элементов в строке.

int data1[100];
for (int i = 0; i < 100; ++i)
{
	data1[i] = ext::GetRandomValue(1, 100);
}
int data[100];
for (int i = 0; i < 100; ++i)
{
	data[i] = ext::GetRandomValue(-100, 100);
}
int data0[100],l=0;
for (int i = 0; i < 100; ++i)
{
	data0[i] = data1[i]+data[i];
}
for (int i = 0; i < 10; ++i)
{
	for (int j = 0; j < 10; ++j)
	{
		cout<<data0[l]<< " ";
		l++;
	}
	cout << endl;
}
	Сгенерируйте массив из 100 элементов в диапазоне от 1 до 100.
	Попросите пользователя ввести число из этого же диапазона.
	Осуществите поиск элемента в массиве.
	Если число есть в массиве выведите его индекс, если числа нет выведите -1.
	Посчитайте и выведите на экран количество элементов больших, чем введенное пользователем число.

int data[100],n,k=0,count=0;
for (int i = 0; i < 100; ++i)
{
	data[i] = ext::GetRandomValue(1, 100);
}
cin >> n;
for (int i = 0; i < 100; ++i)
{
	if (data[i] == n)
	{
		cout << i;
		k++;
		break;
	}
}
	if (k == 0)
	{
		cout << -1;
	}
	cout << endl;
	for (int i = 0; i < 100; ++i)
	{
		if (data[i] > n)
		{
			count++;
		}
	}
	cout << count;
	/* Задание 4
	Сгенерируйте массив типа char из 100 элементов в диапазоне от a до z.
	Подсказка: функцию генерации рандомного элемента можно вызвать следующим образом:
	GetRandomValue('a','z');
	Выведите получившейся массив на экран в виде одной строки.
	Выведите на экран как часто каждая буква встречается в сгенерированном массиве.
	Выведите на экран вертикальную гистограмму рассчитанной частоты символов.
	Пример: "aabbdddz" для такой строки получится следующая гистограмма:
	|**
	|**
	|
	|***
	|
	|
	...
	|
	|
	|*
	На основании произведенных расчетов замените числовое представление на гистограмму, составленную из символов '*'
	*/

	/* Задание 5
	Пусть есть двумерный массив объявленный следующим образом:
	int data[3][2] = { {2, 4}, {8, 16}, {32, 64} };
	Чему равно количество строк в данном массиве?
	3
	Чему равно количество элементов в каждой строке?
	2
	Какой размер имеет данный массив?
	6
	Данные какого типа он хранит?
	Целочисленного(int)
	Как обратиться к элементу со значением 8?
	data[1][0];
	Как обратиться к элементу со значением 64?
	data[2][1];
	Присвойте первому элементу массива значение 1.
	data[0][0]=1;
	Удвойте значение последнего элемента в массиве.
	data[2][1]=data[2][1]*2;
	Объявите двумерный массив размером 4х2 любого типа и проинизиализируете его с помощью списка инициализации
	int data[4][2] = { {2, 4}, {8, 16}, {32, 64},{2,5} };
	Можно ли не указывать размер двумерного массива при его создании?
	Если можно, то продемострируйте это.
	int data[][] = { {2, 4}, {8, 16}, {32, 64} };
	Пусть массив объявили следующим образом:
	int data[2][4] = { {1, 2,0,0}, {3,4,5,0} }
	Каков размер данного массива?
	8
	Чему равен элемент data[0][0]? Чему равен элемент data[1][2]?
	1;5
	Проверьте ответы с помощью дебагера.
	
int data[2][4] = { {1,2,0,0}, {3,4,5,0} };
cout << data[0][0] << " " << data[1][2];

	Увеличьте в два раза каждый элемент в данном массиве.
	Выведите все элементы массива на экран.
	Использовать циклы for
	
int data[2][4] = { {1, 2,0,0}, {3,4,5,0} };
for (int i = 0; i < 2; ++i)
{
	for (int j = 0;j < 4;j++)
	{
		data[i][j] = data[i][j] * 2;
	}
}
for (int i = 0; i < 2; ++i)
{
	for (int j = 0;j < 4;j++)
	{
		cout << data[i][j] << " ";
	}
	cout << endl;
}
	/* Задание 6
	Сгенерируйте двумерный массив размером 10x10.
	Заполните его случайными значениями от 0 до 100
	Найдите и выведите на экран:
	Сгенерированный массив
	Сумму всех элементов массива
	Количество всех четных элементов.
	Максимальный и минимальный элементы массива вместе с их индексами
	*/
int data[10][10], sum = 0, count = 0, k,k1,k2,k3,min = numeric_limits<int>::max(), max = numeric_limits<int>::min();
for (int i = 0; i < 10; ++i)
{
	for (int j = 0;j < 10;j++)
	{
		data[i][j] = ext::GetRandomValue(0, 100);
	}
}
for (int i = 0; i < 10; ++i)
{
	for (int j = 0;j < 10;j++)
	{
		cout << data[i][j] << " ";
	}
	cout << endl;
}
for (int i = 0; i < 10; ++i)
{
	for (int j = 0;j < 10;j++)
	{
		sum=sum+ data[i][j];
	}
}
cout << sum << endl;
for (int i = 0; i < 10; ++i)
{
	for (int j = 0;j < 10;j++)
	{
		if (data[i][j] % 2 == 0)
		{
			count = count + 1;
		}
	}
}
cout << count << endl;
for (int i = 0; i < 10; ++i)
{
	for (int j = 0;j < 10;j++)
	{
		if (data[i][j]<min)
		{
			min = data[i][j];
			k = i;
			k1 = j;
		}
		if (data[i][j] > max)
		{
			max = data[i][j];
			k2 = i;
			k3 = j;
		}

	}
}
cout << max << " " << k2 << " " << k3 << endl;
cout << min << " " << k << " " << k1 << endl;
	/* Дополнительное задание
	На вход подается строка, описывающая ситуацию на поле в игре "Крестики-нолики".
	На ее основании необходимо заполнить двумерный массив char field[3][3],
	и, проаназилировав его, вывести победителя или Draw,
	если выигрышной последовательности нет ни у одного, либо есть у обоих.
	Тестовые данные				Ожидаемый результат
	XXX OO. ...					Winner is X
	OXO XO. .XO					Draw
	OXO XOX OX.					Draw
	XOX OXO OXO					Draw
	... ... ...					Draw
	XXX OOO ...					Draw
	XOO XOO XX.					Winner is X
	.O. XO. XOX					Winner is O
	*/

}